//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_default_InteractUI;
        
        private static SteamVR_Action_Boolean p_default_Teleport;
        
        private static SteamVR_Action_Boolean p_default_GrabPinch;
        
        private static SteamVR_Action_Boolean p_default_GrabGrip;
        
        private static SteamVR_Action_Pose p_default_Pose;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_default_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_default_Squeeze;
        
        private static SteamVR_Action_Boolean p_default_HeadsetOnHead;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnLeft;
        
        private static SteamVR_Action_Boolean p_default_SnapTurnRight;
        
        private static SteamVR_Action_Vibration p_default_Haptic;
        
        private static SteamVR_Action_Vector2 p_platformer_Move;
        
        private static SteamVR_Action_Boolean p_platformer_Jump;
        
        private static SteamVR_Action_Vector2 p_buggy_Steering;
        
        private static SteamVR_Action_Single p_buggy_Throttle;
        
        private static SteamVR_Action_Boolean p_buggy_Brake;
        
        private static SteamVR_Action_Boolean p_buggy_Reset;
        
        private static SteamVR_Action_Pose p_mixedreality_ExternalCamera;
        
        private static SteamVR_Action_Single p_vRIF_LeftGrip;
        
        private static SteamVR_Action_Single p_vRIF_RightGrip;
        
        private static SteamVR_Action_Boolean p_vRIF_AButton;
        
        private static SteamVR_Action_Boolean p_vRIF_BButton;
        
        private static SteamVR_Action_Boolean p_vRIF_XButton;
        
        private static SteamVR_Action_Boolean p_vRIF_YButton;
        
        private static SteamVR_Action_Single p_vRIF_LeftTrigger;
        
        private static SteamVR_Action_Single p_vRIF_RightTrigger;
        
        private static SteamVR_Action_Boolean p_vRIF_LeftTriggerNear;
        
        private static SteamVR_Action_Boolean p_vRIF_RightTriggerNear;
        
        private static SteamVR_Action_Vector2 p_vRIF_LeftThumbstickAxis;
        
        private static SteamVR_Action_Vector2 p_vRIF_RightThumbstickAxis;
        
        private static SteamVR_Action_Boolean p_vRIF_LeftThumbstickNear;
        
        private static SteamVR_Action_Boolean p_vRIF_RightThumbstickNear;
        
        private static SteamVR_Action_Boolean p_vRIF_LeftThumbstickDown;
        
        private static SteamVR_Action_Boolean p_vRIF_RightThumbstickDown;
        
        private static SteamVR_Action_Boolean p_vRIF_Start;
        
        private static SteamVR_Action_Boolean p_vRIF_Back;
        
        private static SteamVR_Action_Vibration p_vRIF_Haptic;
        
        public static SteamVR_Action_Boolean default_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_default_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_Teleport
        {
            get
            {
                return SteamVR_Actions.p_default_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_default_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_default_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose default_Pose
        {
            get
            {
                return SteamVR_Actions.p_default_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton default_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_default_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single default_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_default_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean default_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_default_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnLeft
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean default_SnapTurnRight
        {
            get
            {
                return SteamVR_Actions.p_default_SnapTurnRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration default_Haptic
        {
            get
            {
                return SteamVR_Actions.p_default_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Vector2 platformer_Move
        {
            get
            {
                return SteamVR_Actions.p_platformer_Move.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean platformer_Jump
        {
            get
            {
                return SteamVR_Actions.p_platformer_Jump.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 buggy_Steering
        {
            get
            {
                return SteamVR_Actions.p_buggy_Steering.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Single buggy_Throttle
        {
            get
            {
                return SteamVR_Actions.p_buggy_Throttle.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean buggy_Brake
        {
            get
            {
                return SteamVR_Actions.p_buggy_Brake.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean buggy_Reset
        {
            get
            {
                return SteamVR_Actions.p_buggy_Reset.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose mixedreality_ExternalCamera
        {
            get
            {
                return SteamVR_Actions.p_mixedreality_ExternalCamera.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Single vRIF_LeftGrip
        {
            get
            {
                return SteamVR_Actions.p_vRIF_LeftGrip.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single vRIF_RightGrip
        {
            get
            {
                return SteamVR_Actions.p_vRIF_RightGrip.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean vRIF_AButton
        {
            get
            {
                return SteamVR_Actions.p_vRIF_AButton.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRIF_BButton
        {
            get
            {
                return SteamVR_Actions.p_vRIF_BButton.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRIF_XButton
        {
            get
            {
                return SteamVR_Actions.p_vRIF_XButton.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRIF_YButton
        {
            get
            {
                return SteamVR_Actions.p_vRIF_YButton.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Single vRIF_LeftTrigger
        {
            get
            {
                return SteamVR_Actions.p_vRIF_LeftTrigger.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Single vRIF_RightTrigger
        {
            get
            {
                return SteamVR_Actions.p_vRIF_RightTrigger.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean vRIF_LeftTriggerNear
        {
            get
            {
                return SteamVR_Actions.p_vRIF_LeftTriggerNear.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRIF_RightTriggerNear
        {
            get
            {
                return SteamVR_Actions.p_vRIF_RightTriggerNear.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 vRIF_LeftThumbstickAxis
        {
            get
            {
                return SteamVR_Actions.p_vRIF_LeftThumbstickAxis.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vector2 vRIF_RightThumbstickAxis
        {
            get
            {
                return SteamVR_Actions.p_vRIF_RightThumbstickAxis.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean vRIF_LeftThumbstickNear
        {
            get
            {
                return SteamVR_Actions.p_vRIF_LeftThumbstickNear.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRIF_RightThumbstickNear
        {
            get
            {
                return SteamVR_Actions.p_vRIF_RightThumbstickNear.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRIF_LeftThumbstickDown
        {
            get
            {
                return SteamVR_Actions.p_vRIF_LeftThumbstickDown.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRIF_RightThumbstickDown
        {
            get
            {
                return SteamVR_Actions.p_vRIF_RightThumbstickDown.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRIF_Start
        {
            get
            {
                return SteamVR_Actions.p_vRIF_Start.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vRIF_Back
        {
            get
            {
                return SteamVR_Actions.p_vRIF_Back.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration vRIF_Haptic
        {
            get
            {
                return SteamVR_Actions.p_vRIF_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.mixedreality_ExternalCamera,
                    SteamVR_Actions.vRIF_LeftGrip,
                    SteamVR_Actions.vRIF_RightGrip,
                    SteamVR_Actions.vRIF_AButton,
                    SteamVR_Actions.vRIF_BButton,
                    SteamVR_Actions.vRIF_XButton,
                    SteamVR_Actions.vRIF_YButton,
                    SteamVR_Actions.vRIF_LeftTrigger,
                    SteamVR_Actions.vRIF_RightTrigger,
                    SteamVR_Actions.vRIF_LeftTriggerNear,
                    SteamVR_Actions.vRIF_RightTriggerNear,
                    SteamVR_Actions.vRIF_LeftThumbstickAxis,
                    SteamVR_Actions.vRIF_RightThumbstickAxis,
                    SteamVR_Actions.vRIF_LeftThumbstickNear,
                    SteamVR_Actions.vRIF_RightThumbstickNear,
                    SteamVR_Actions.vRIF_LeftThumbstickDown,
                    SteamVR_Actions.vRIF_RightThumbstickDown,
                    SteamVR_Actions.vRIF_Start,
                    SteamVR_Actions.vRIF_Back,
                    SteamVR_Actions.vRIF_Haptic};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.mixedreality_ExternalCamera,
                    SteamVR_Actions.vRIF_LeftGrip,
                    SteamVR_Actions.vRIF_RightGrip,
                    SteamVR_Actions.vRIF_AButton,
                    SteamVR_Actions.vRIF_BButton,
                    SteamVR_Actions.vRIF_XButton,
                    SteamVR_Actions.vRIF_YButton,
                    SteamVR_Actions.vRIF_LeftTrigger,
                    SteamVR_Actions.vRIF_RightTrigger,
                    SteamVR_Actions.vRIF_LeftTriggerNear,
                    SteamVR_Actions.vRIF_RightTriggerNear,
                    SteamVR_Actions.vRIF_LeftThumbstickAxis,
                    SteamVR_Actions.vRIF_RightThumbstickAxis,
                    SteamVR_Actions.vRIF_LeftThumbstickNear,
                    SteamVR_Actions.vRIF_RightThumbstickNear,
                    SteamVR_Actions.vRIF_LeftThumbstickDown,
                    SteamVR_Actions.vRIF_RightThumbstickDown,
                    SteamVR_Actions.vRIF_Start,
                    SteamVR_Actions.vRIF_Back};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.vRIF_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.default_Haptic,
                    SteamVR_Actions.vRIF_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.default_Pose,
                    SteamVR_Actions.mixedreality_ExternalCamera};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.vRIF_AButton,
                    SteamVR_Actions.vRIF_BButton,
                    SteamVR_Actions.vRIF_XButton,
                    SteamVR_Actions.vRIF_YButton,
                    SteamVR_Actions.vRIF_LeftTriggerNear,
                    SteamVR_Actions.vRIF_RightTriggerNear,
                    SteamVR_Actions.vRIF_LeftThumbstickNear,
                    SteamVR_Actions.vRIF_RightThumbstickNear,
                    SteamVR_Actions.vRIF_LeftThumbstickDown,
                    SteamVR_Actions.vRIF_RightThumbstickDown,
                    SteamVR_Actions.vRIF_Start,
                    SteamVR_Actions.vRIF_Back};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.vRIF_LeftGrip,
                    SteamVR_Actions.vRIF_RightGrip,
                    SteamVR_Actions.vRIF_LeftTrigger,
                    SteamVR_Actions.vRIF_RightTrigger};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.vRIF_LeftThumbstickAxis,
                    SteamVR_Actions.vRIF_RightThumbstickAxis};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.default_SkeletonLeftHand,
                    SteamVR_Actions.default_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.default_InteractUI,
                    SteamVR_Actions.default_Teleport,
                    SteamVR_Actions.default_GrabPinch,
                    SteamVR_Actions.default_GrabGrip,
                    SteamVR_Actions.default_Squeeze,
                    SteamVR_Actions.default_HeadsetOnHead,
                    SteamVR_Actions.default_SnapTurnLeft,
                    SteamVR_Actions.default_SnapTurnRight,
                    SteamVR_Actions.platformer_Move,
                    SteamVR_Actions.platformer_Jump,
                    SteamVR_Actions.buggy_Steering,
                    SteamVR_Actions.buggy_Throttle,
                    SteamVR_Actions.buggy_Brake,
                    SteamVR_Actions.buggy_Reset,
                    SteamVR_Actions.vRIF_LeftGrip,
                    SteamVR_Actions.vRIF_RightGrip,
                    SteamVR_Actions.vRIF_AButton,
                    SteamVR_Actions.vRIF_BButton,
                    SteamVR_Actions.vRIF_XButton,
                    SteamVR_Actions.vRIF_YButton,
                    SteamVR_Actions.vRIF_LeftTrigger,
                    SteamVR_Actions.vRIF_RightTrigger,
                    SteamVR_Actions.vRIF_LeftTriggerNear,
                    SteamVR_Actions.vRIF_RightTriggerNear,
                    SteamVR_Actions.vRIF_LeftThumbstickAxis,
                    SteamVR_Actions.vRIF_RightThumbstickAxis,
                    SteamVR_Actions.vRIF_LeftThumbstickNear,
                    SteamVR_Actions.vRIF_RightThumbstickNear,
                    SteamVR_Actions.vRIF_LeftThumbstickDown,
                    SteamVR_Actions.vRIF_RightThumbstickDown,
                    SteamVR_Actions.vRIF_Start,
                    SteamVR_Actions.vRIF_Back};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_default_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/InteractUI")));
            SteamVR_Actions.p_default_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/Teleport")));
            SteamVR_Actions.p_default_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabPinch")));
            SteamVR_Actions.p_default_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/GrabGrip")));
            SteamVR_Actions.p_default_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/default/in/Pose")));
            SteamVR_Actions.p_default_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonLeftHand")));
            SteamVR_Actions.p_default_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/default/in/SkeletonRightHand")));
            SteamVR_Actions.p_default_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/default/in/Squeeze")));
            SteamVR_Actions.p_default_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/HeadsetOnHead")));
            SteamVR_Actions.p_default_SnapTurnLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnLeft")));
            SteamVR_Actions.p_default_SnapTurnRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/default/in/SnapTurnRight")));
            SteamVR_Actions.p_default_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
            SteamVR_Actions.p_platformer_Move = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/platformer/in/Move")));
            SteamVR_Actions.p_platformer_Jump = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/platformer/in/Jump")));
            SteamVR_Actions.p_buggy_Steering = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/buggy/in/Steering")));
            SteamVR_Actions.p_buggy_Throttle = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/buggy/in/Throttle")));
            SteamVR_Actions.p_buggy_Brake = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/buggy/in/Brake")));
            SteamVR_Actions.p_buggy_Reset = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/buggy/in/Reset")));
            SteamVR_Actions.p_mixedreality_ExternalCamera = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/mixedreality/in/ExternalCamera")));
            SteamVR_Actions.p_vRIF_LeftGrip = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/VRIF/in/LeftGrip")));
            SteamVR_Actions.p_vRIF_RightGrip = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/VRIF/in/RightGrip")));
            SteamVR_Actions.p_vRIF_AButton = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VRIF/in/AButton")));
            SteamVR_Actions.p_vRIF_BButton = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VRIF/in/BButton")));
            SteamVR_Actions.p_vRIF_XButton = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VRIF/in/XButton")));
            SteamVR_Actions.p_vRIF_YButton = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VRIF/in/YButton")));
            SteamVR_Actions.p_vRIF_LeftTrigger = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/VRIF/in/LeftTrigger")));
            SteamVR_Actions.p_vRIF_RightTrigger = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/VRIF/in/RightTrigger")));
            SteamVR_Actions.p_vRIF_LeftTriggerNear = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VRIF/in/LeftTriggerNear")));
            SteamVR_Actions.p_vRIF_RightTriggerNear = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VRIF/in/RightTriggerNear")));
            SteamVR_Actions.p_vRIF_LeftThumbstickAxis = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/VRIF/in/LeftThumbstickAxis")));
            SteamVR_Actions.p_vRIF_RightThumbstickAxis = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/VRIF/in/RightThumbstickAxis")));
            SteamVR_Actions.p_vRIF_LeftThumbstickNear = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VRIF/in/LeftThumbstickNear")));
            SteamVR_Actions.p_vRIF_RightThumbstickNear = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VRIF/in/RightThumbstickNear")));
            SteamVR_Actions.p_vRIF_LeftThumbstickDown = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VRIF/in/LeftThumbstickDown")));
            SteamVR_Actions.p_vRIF_RightThumbstickDown = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VRIF/in/RightThumbstickDown")));
            SteamVR_Actions.p_vRIF_Start = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VRIF/in/Start")));
            SteamVR_Actions.p_vRIF_Back = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VRIF/in/Back")));
            SteamVR_Actions.p_vRIF_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/VRIF/out/Haptic")));
        }
    }
}
